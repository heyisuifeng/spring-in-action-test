<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">
    <!--自动扫描-->
    <context:component-scan base-package="com.ace"/>


    <!--开启注解驱动-->
    <mvc:annotation-driven/>

    <!-- 配置spring mvc视图解析器 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- 前缀 -->
        <property name="prefix" value="/WEB-INF/jsp/"></property>
        <!-- 后缀 -->
        <property name="suffix" value=".jsp"></property>
    </bean>

    <mvc:resources mapping="/assets/**" location="/assets/"/>

    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <mvc:exclude-mapping path="/assets/**"/>
            <bean class="com.ace.interceptor.LoginRequiredInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>

    <!--第五章征服数据库-->
    <!--使用数据源连接池-->
    <bean id="dataSource"
          class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://127.0.0.1:3306/shiro_test?useUnicode\=true;characterEncoding\=utf8;autoReconnect\=true"/>
        <property name="username" value="root"/>
        <property name="password" value="p@ssw0rd"/>
        <property name="initialSize" value="5"/>
        <property name="maxActive" value="10"/>
    </bean>

    <!--使用JDBC模版类访问数据库-->
    <!--最新的已经遗弃了SimpleJdbcTemplate模版-->
    <bean id="jdbcTemplate"
          class="org.springframework.jdbc.core.JdbcTemplate">
        <constructor-arg ref="dataSource"/>
    </bean>

    <!--使用注解方式-->
    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>

        <!-- 自动扫描注解方式配置的hibernate类文件 -->
        <property name="packagesToScan">
            <list>
                <value>com.ace.entity</value>
            </list>
        </property>

        <!-- 自动扫描hbm方式配置的hibernate文件和.hbm文件 -->
        <!--<property name="mappingDirectoryLocations">
            <list>
                <value>classpath:User.hbm.xml</value>
            </list>
        </property>-->

        <property name="hibernateProperties">
            <props>
                <!--配置Hibernate使用Mysql数据库并且要按照MySQLDialect来构建SQL-->
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop><!--SQL dialect 方言-->
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.format_sql">true</prop>
                <prop key="hibernate.current_session_context_class">thread</prop>
                <!-- 自动创表 -->
                <!--<prop key="hibernate.hbm2ddl.auto">create</prop>-->
            </props>
        </property>
    </bean>

    <!--第六章事务管理-->
    <!--JDBC事务：当使用的是JDBC持久化的时候，使用此配置-->
    <bean id="JDBCTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--Hibernate事务：当使用的是hibernate持久化的时候，使用此配置-->
    <bean id="hibernateTransactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/><!--配置Hibernate SessionFactory-->
    </bean>

    <!--配置权限管理器-->
    <bean id="securityManager"
          class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <!--ref对应我们写的realm shiroService-->
        <property name="realm" ref="shiroService"/>
        <!--使用下面配置的缓存管理器-->
        <property name="cacheManager" ref="cacheManager"/>
    </bean>

    <bean id="cacheManager" class="org.apache.shiro.cache.MemoryConstrainedCacheManager"/>

    <!--配置Shiro的过滤器工厂类，id 和web.xml中配置的过滤器一致 -->
    <bean id="shiroFilter"
          class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <!--调用我们配置的权限管理器-->
        <property name="securityManager" ref="securityManager"/>
        <!--配置我们的登录请求地址(启动时的首页面地址)-->
        <property name="loginUrl" value="/"/>
        <!--配置我们在登录页登录成功后的跳转地址，如果你访问的是非/login地址，则跳到您访问的地址-->
        <property name="successUrl" value="/search"/>
        <!-- 如果您请求的资源不再您的权限范围，则跳转到/403请求地址 -->
        <property name="unauthorizedUrl" value="/403"/>
        <!-- 权限配置 -->
        <property name="filterChainDefinitions">
            <value>
                <!-- anon表示此地址不需要任何权限即可访问 -->
                /static/**=anon
                /login=anon
                <!-- perms[user:query]表示访问此连接需要权限为user:query的用户 -->
                /user=perms[user:query]
                <!-- roles[manager]表示访问此连接需要用户的角色为manager -->
                /user/add=roles[manager]
                /user/del/**=roles[admin]
                /user/edit/**=roles[manager]
                <!--所有的请求(除去配置的静态资源请求或请求地址为anon的请求)都要通过登录验证,如果未登录则跳到/login-->
                /** = authc
            </value>
        </property>
    </bean>

    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
</beans>